What happens when you initialize a repository? Why do you need to do it?
- git creates a .git system folder in the repository directory
- Meta data about the repository is stored there 

How is the staging area different from the working directory and the repository?
What value do you think it offers?
- the staging area groups my selection files from the working directory, 
  that I want to check in by one commit.

How can you use the staging area to make sure you have one commit per logical
change?
- add all the relevant files that have been changed for one logical change to the staging area, 
  then commit those files in one command

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
- it helps keeping the work of more than one developer on the same repo separate,
  but every developer can make use of persisting his work
- keep production code and different feature developments separate

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
- automates identifying the portions of two versions of a file, that are the same, and 
those that have changed in comparison to the common ancestor in at least one of the two new versions.
- Limitation: different changes of the same portion of the common ancestor are not merged automatically.
These are brought as conflicts to the user's attention.


